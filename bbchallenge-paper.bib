@article{Rado_1962,
  title   = {On non-computable functions},
  volume  = {41},
  number  = {3},
  journal = {Bell System Technical Journal},
  author  = {Rad\'{o}, Tibor},
  year    = {1962},
  pages   = {877–884},
  note    = {\href{https://archive.org/details/bstj41-3-877/mode/2up}{https://archive.org/details/bstj41-3-877/mode/2up}}
}

@inproceedings{Rado_1963,
  title     = {On a simple source for non-computable functions},
  author    = {Rad\'{o}, Tibor},
  booktitle = {Proceedings of the Symposium on Mathematical Theory of Automata (New York)},
  publisher = {{Polytechnic Press of the polytechnique Institue of Brooklyn}},
  year      = {1963},
  location  = {{Ney York, USA}}
}

@article{BusyBeaverFrontier,
  author     = {Aaronson, Scott},
  title      = {{T}he {B}usy {B}eaver {F}rontier},
  year       = {2020},
  issue_date = {August 2020},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {51},
  number     = {3},
  issn       = {0163-5700},
  url        = {https://doi.org/10.1145/3427361.3427369},
  doi        = {10.1145/3427361.3427369},
  abstract   = {The Busy Beaver function, with its incomprehensibly rapid growth, has captivated generations of computer scientists, mathematicians, and hobbyists. In this survey, I o er a personal view of the BB function 58 years after its introduction, emphasizing lesser-known insights, recent progress, and especially favorite open problems. Examples of such problems include: when does the BB function rst exceed the Ackermann function? Is the value of BB(20) independent of set theory? Can we prove that BB(n + 1) > 2BB(n) for large enough n? Given BB(n), how many advice bits are needed to compute BB(n + 1)? Do all Busy Beavers halt on all inputs, not just the 0 input? Is it decidable, given n, whether BB(n) is even or odd?},
  journal    = {SIGACT News},
  month      = sep,
  pages      = {32–54},
  numpages   = {23},
  note       = {\url{https://www.scottaaronson.com/papers/bb.pdf}}
}

@article{Marxen_1990,
  title   = {{Attacking the Busy Beaver 5}},
  author  = {H. Marxen and J{\"u}rgen Buntrock},
  journal = {Bull. EATCS},
  year    = {1990},
  volume  = {40},
  pages   = {247-251}
}

@article{Brady83,
  issn      = {00255718, 10886842},
  url       = {http://www.jstor.org/stable/2007539},
  author    = {Allen H. Brady},
  journal   = {Mathematics of Computation},
  number    = {162},
  pages     = {647--665},
  publisher = {American Mathematical Society},
  title     = {The Determination of the Value of Rado's Noncomputable Function {{$\Sigma(k)$}} for Four-State Turing Machines},
  urldate   = {2024-04-26},
  volume    = {40},
  year      = {1983}
}

@inproceedings{BEM_1997,
  title        = {Reachability analysis of pushdown automata: Application to model-checking},
  author       = {Bouajjani, Ahmed and Esparza, Javier and Maler, Oded},
  booktitle    = {International Conference on Concurrency Theory},
  pages        = {135--150},
  year         = {1997},
  organization = {Springer}
}

@inproceedings{Biere_2020,
  author    = {Armin Biere and Katalin Fazekas and Mathias Fleury and Maximillian Heisinger},
  title     = {{CaDiCaL}, {Kissat}, {Paracooba}, {Plingeling} and {Treengeling}
               Entering the {SAT Competition 2020}},
  pages     = {51--53},
  editor    = {Tomas Balyo and Nils Froleyks and Marijn Heule and
               Markus Iser and Matti J{\"a}rvisalo and Martin Suda},
  booktitle = {Proc.~of {SAT Competition} 2020 -- Solver and Benchmark Descriptions},
  volume    = {B-2020-1},
  series    = {Department of Computer Science Report Series B},
  publisher = {University of Helsinki},
  year      = 2020
}

@article{CUNINGHAMEGREEN1991251,
  title    = {Minimax algebra and applications},
  journal  = {Fuzzy Sets and Systems},
  volume   = {41},
  number   = {3},
  pages    = {251-267},
  year     = {1991},
  issn     = {0165-0114},
  doi      = {https://doi.org/10.1016/0165-0114(91)90130-I},
  url      = {https://www.sciencedirect.com/science/article/pii/016501149190130I},
  author   = {R.A. Cuninghame-Green},
  keywords = {Minimax algebra, combinatorial optimisation, discrete applied mathematics},
  abstract = {We consider theories of linear and of polynomial algebra, over two scalar systems, often called max-algebra and min-algebra. Here, max-algebra is the system M = (R ∪ {−∞}, ⊛, ⊗) where x ⊛ y = max(x, y) and x ⊛ y = x + y. Min-algebra is the dual system M′ = R ∪ {+∞}, ⊛, ⊗′ with x ⊛′ y = min(x, y) and x ⊗′ y = x + y. Towards the end we also consider minimax algebra, the system M″ = (R ∪ {−∞, +∞}, ⊛, ⊗, ⊛′, ⊗′). Application fields discussed include location problems, machine scheduling, cutting and packing problems, discrete-event systems and path-finding problems.}
}

@book{Sipser,
  author    = {Sipser, Michael},
  title     = {Introduction to the Theory of Computation},
  year      = {1996},
  isbn      = {053494728X},
  publisher = {International Thomson Publishing},
  edition   = {1st},
  abstract  = {From the Publisher:Michael Sipser's philosophy in writing this book is simple: make the subject interesting and relevant, and the students will learn. His emphasis on unifying computer science theory - rather than offering a collection of low-level details - sets the book apart, as do his intuitive explanations. Throughout the book, Sipser - a noted authority on the theory of computation - builds students' knowledge of conceptual tools used in computer science, the aesthetic sense they need to create elegant systems, and the ability to think through problems on their own. INTRODUCTION TO THE THEORY OF COMPUTATION provides a mathematical treatment of computation theory grounded in theorems and proofs. Proofs are presented with a "proof idea" component to reveal the concepts underpinning the formalism. Algorithms are presented using prose instead of pseudocode to focus attention on the algorithms themselves, rather than on specific computational models. Topic coverage, terminology, and order of presentation are traditional for an upper-level course in computer science theory. Users of the Preliminary Edition (now out of print) will be interested to note several new chapters on complexity theory: Chapter 8 on space complexity; Chapter 9 on provable intractability, and Chapter 10 on advanced topics, including approximation algorithms, alternation, interactive proof systems, cryptography, and parallel computing.}
}

@misc{ShawnCTL,
  author       = {Ligocki, Shawn},
  title        = {{CTL Filter}},
  howpublished = {Blog: \url{https://www.sligocki.com/2022/06/10/ctl.html}},
  note         = {Accessed: 2023-03-20}
}

@misc{Skelet_bbfind,
  author       = {Georgiev, Georgi},
  title        = {{Busy Beaver prover}},
  howpublished = {\url{https://skelet.ludost.net/bb/}},
  note         = {Accessed: 2024-11-25},
  year         = {2003}
}


@misc{BruteforceCTL,
  author       = {Iijil},
  title        = {Bruteforce-CTL},
  year         = {2022},
  publisher    = {GitHub},
  journal      = {GitHub repository},
  howpublished = {\url{https://github.com/Iijil1/Bruteforce-CTL}},
  commit       = {6d97079dbb2d272f7e82c799c21b6dd0bd3286ed}
}

@phdthesis{Lin1963,
  author = {Shen Lin},
  title  = {Computer studies of Turing machine problems},
  school = {Ohio State University, Graduate School},
  year   = {1963}
}

@incollection{BradyMeaningOfLife,
  author    = {Brady, Allen H and Life, the Meaning of},
  isbn      = {9780198537748},
  title     = {The Busy Beaver Game and the Meaning of Life},
  booktitle = {The Universal Turing Machine: A Half-Century Survey},
  publisher = {Oxford University Press},
  year      = {1990},
  month     = {03},
  abstract  = {The representation of the Universal Computing Machine in the guise of the stored-program digital computer is now well known among serious students of computer science. On the periphery, a modem generation of technologists seems unable to conceive of a time when “computer” meant “a person who computes” and the concept of “programming” was not ubiquitous. For practical reasons, a modem computer is much more complex than is minimally necessary to achieve universality. The original formulation of a Universal Computing Machine (Turing 1936-7) involved a table based upon 15 symbols and 28 states with no restriction imposed on the length of a sequence of atomic acts (“move” and “print”) permitted prior to a change in state. An aboriginal use of macros simplified the description.},
  doi       = {10.1093/oso/9780198537748.003.0009},
  url       = {https://doi.org/10.1093/oso/9780198537748.003.0009},
  eprint    = {https://academic.oup.com/book/0/chapter/422572862/chapter-pdf/52547412/isbn-9780198537748-book-part-9.pdf}
}

@misc{PMichel_website,
  title  = {{The Busy Beaver Competitions}},
  note   = {\ \\ \href{https://bbchallenge.org/~pascal.michel/bbc.html}{https://bbchallenge.org/$\sim$pascal.michel/bbc.html} [Accessed 04-08-2024]},
  author = {Michel, Pascal}
}

@techreport{michel2019busy,
  title         = {{The Busy Beaver Competition: a historical survey}},
  author        = {Pascal Michel},
  year          = {2019},
  month         = sep,
  eprint        = {0906.3749},
  archiveprefix = {arXiv},
  url           = {https://arxiv.org/abs/0906.3749v6},
  primaryclass  = {math.LO}
}

@inproceedings{LafittePapazian2007,
  author    = {Laffite, G and Papazian C},
  booktitle = {Computation and Logic in the Real World, Proceedings of the Third Conference on
               Computabiliy in Europe, CiE '07},
  pages     = {219-227},
  publisher = {Springer-Verlag},
  location  = {Siena, Italy},
  title     = {The fabric of small {Turing} machines},
  year      = {2007},
  address   = {Berlin, Heidelberg},
  isbn      = {9783540730002}
}

@article{MICHEL200445,
  title    = {Small Turing machines and generalized busy beaver competition},
  journal  = {Theoretical Computer Science},
  volume   = {326},
  number   = {1},
  pages    = {45-56},
  year     = {2004},
  issn     = {0304-3975},
  doi      = {https://doi.org/10.1016/j.tcs.2004.05.008},
  url      = {https://www.sciencedirect.com/science/article/pii/S0304397504003718},
  author   = {Pascal Michel},
  keywords = {Turing machines, Decidability, Busy beaver competition, 3+1 problem, Collatz problem}
}